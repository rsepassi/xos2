# todo

* dynamic label creation? Maybe just allowing deps to be passed as arguments?
* implement external repos - repo name mapped to url
* documentation
* Increase concurrency: Fibers in dependency and file loops, batch apis
* detailed review of caching policy
* tests, CI
* UCL configuration parser (e.g. for repo specification)
* Tracking license, version url, documentation
* Cloud cache
  need to resolve paths in label outputs pointing to other rule outputs
* Verify Linux, Windows, FreeBSD builds
* xos cache tools, see ids, etc from info.json
* Should system usage be marked in the output somehow? May be important for
  cloud caching (either not allowed, or some configurable hashing function)
* Allow for aliases, i.e. a target that is an alias for another label, without
  having to re-export the output directory
* Move logging to wrencli, add debug logging to Process.spawn
* Wren package manager
* Add ccache for zig cc invocations? Only for rust?
* Filter error stack traces?


# code signing windows

Or can use Azure Trusted Signing Account for $10/mo
https://azure.microsoft.com/en-us/products/trusted-signing

https://github.com/mtrojnar/osslsigncode
### Generate a private key for the CA
openssl genrsa -out ca.key 4096
### Generate certificate
openssl req -new -x509 -days 1826 -key ca.key -out ca.crt -subj '/CN=Acme Corp CA'
### Generate a private key for code siginig
openssl genrsa -out codesign.key 4096
### Generate a new certificate request (csr) with just a CN.
openssl req -new -key codesign.key -reqexts v3_req -out codesign.csr -subj '/CN=Acme Corp'
### Create certificates based on the csr
openssl x509 -req -days 1826 -in codesign.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out codesign.crt
osslsigncode sign -certs codesign.crt -key codesign.key \
    -n "Your Application" -i http://www.yourwebsite.com/ \
    -t http://timestamp.digicert.com \
    -in yourapp.exe -out yourapp-signed.exe
